---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config-map
  namespace: homelab-monitoring
data:
  grafana.ini: |
    [log]
    ; # Either "debug", "info", "warn", "error", "critical", default is "info"
    ; # we change from info to debug level
    level = info

    [security]
    admin_password = $GRAFANA_ADMIN_PW

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: grafana-pv-volume
  namespace: homelab-monitoring
spec:
  capacity:
    storage: 1Gi
  storageClassName: local-storage
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: grafana
  namespace: homelab-monitoring
  labels:
    app.kubernetes.io/name: grafana
spec:
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
  template:
    metadata:
      name: grafana
      labels:
        app.kubernetes.io/name: grafana
    spec:
      securityContext:
      fsGroup: 472
      supplementalGroups:
        - 0
      containers:
        - name: grafana
          image: grafana/grafana:latest
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: grafana-config-volume
              mountPath: /etc/grafana
            - name: grafana-pv-volume
              mountPath: /var/lib/grafana
          env:
          - name: GRAFANA_ADMIN_PW
            valueFrom:
              secretKeyRef:
                name: s-grafana-admin
                key: s-grafana-admin-pw
      volumes:
        - name: grafana-config-volume
          configMap:
            name: grafana-config-map
  volumeClaimTemplates:
  - metadata:
      name: grafana-pv-volume
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
      storageClassName: "local-storage"

---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: homelab-monitoring
spec:
  selector:
    app.kubernetes.io/name: grafana
  type: NodePort
  ports:
    - protocol: TCP
      port: 443
      targetPort: 3000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-ingress
spec:
  rules:
  - host: grafana.kubes.homelab
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grafana-service
            port:
              number: 443
