
- hosts: all
  roles:
    - "10-configure-base"

- hosts: all
  tasks:
    - name: reboot
      ansible.builtin.reboot:
      become: true

- hosts: primary 
  tasks:
    - name: initialize kubernetes with the necessary args
      ansible.builtin.shell: "kubeadm init --control-plane-endpoint k-control-plane-1.homelab --upload-certs --pod-network-cidr 10.0.16.0/20 --service-cidr 10.0.15.0/24 --service-dns-domain kubes.homelab"
      become: true
      register: k8s_init_output

    - name: mkdir /home/packer/.kube
      ansible.builtin.file:
        path: /home/packer/.kube
        state: directory

    - name: copy kube config into packer's home dir subfolder
      ansible.builtin.copy:
        remote_src: yes
        src: /etc/kubernetes/admin.conf
        dest: /home/packer/.kube/config
        owner: packer
        group: packer
        mode: '600'
      become: true

    - name: generate join command
      ansible.builtin.shell: "kubeadm token create --print-join-command"
      register: join_command_output

    - name: generate certificate key for use with join_command later
      ansible.builtin.shell: "kubeadm init phase upload-certs --upload-certs"
      register: certificate_key_output
      become: true

- hosts: all
  tasks:
    - name: save join command for other hosts to access them
      ansible.builtin.set_fact:
        join_command: "{{ hostvars['k-control-plane-1.homelab']['join_command_output'].stdout }}"
        certificate_key: "{{ hostvars['k-control-plane-1.homelab']['certificate_key_output'].stdout_lines[-1] }}"

- hosts: secondaries
  serial: 1
  tasks:
    - name: setup other control plane nodes 
      ansible.builtin.shell: "{{ join_command }} --control-plane --certificate-key {{ certificate_key }}"
      become: true

- hosts: workers
  serial: 1
  tasks:
    - name: setup worker nodes
      ansible.builtin.shell: "{{ join_command }}"
      become: true

- hosts: primary
  tasks:
    - name: Print all nodes
      ansible.builtin.shell: "kubectl get nodes"

# - hosts: primary
#   roles:
#     - "20-configure-addons"

#   tasks:
#     - name: copy over grafana file
#       ansible.builtin.copy:
#         src: ../monitoring/20-grafana.yaml
#         dest: 20-grafana.yaml
    
#     - name: apply grafana
#       ansible.builtin.shell: "kubectl apply -f 20-grafana.yaml"
